# This file contains common pin mappings for the BIGTREETECH SKR Pico V1.0
# To use this config, the firmware should be compiled for the RP2040 with
# USB communication.

# The "make flash" command does not work on the SKR Pico V1.0. Instead,
# after running "make", copy the generated "out/klipper.uf2" file
# to the mass storage device in RP2040 boot mode

## Voron Design VORON 0.2 SKR Pico V1.0 config

## *** THINGS TO CHANGE/CHECK: ***
## MCU path                                                                     [mcu] section
## Z and Extruder motor currents                                                [tmc2209 stepper_*] sections. Uncomment the stepper motor you have
## Full steps per rotation for Extruder                                         [extruder] section
## Thermistor types                                                             [extruder] and [heater_bed] sections - See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types
## Motor currents                                                               [extruder] [stepper] and [_HOME_X/Y] macro sections
## PID tune                                                                     [extruder] and [heater_bed] sections
## Fine tune E steps                                                            [extruder] section
## For more info                                                                check https://docs.vorondesign.com/build/startup/#v0

#####################################################################
#   User Interface Software
#####################################################################
[include mainsail.cfg]
[include aux_fan.cfg]
[include nevermore.cfg]


[virtual_sdcard]
path: ~/printer_data/gcodes

[display_status]
[pause_resume]

[exclude_object]

[mcu]
#####################################################################
# Obtain definition by "ls -l /dev/serial/by-id/"
#####################################################################
serial: /dev/serial/by-id/usb-Klipper_rp2040_45503571288D31E8-if00
restart_method: command

[mcu umb]
serial: /dev/serial/by-id/usb-Klipper_rp2040_4634323932147D9D-if00               #picobillical
restart_method: command

[printer]
kinematics: corexy
max_velocity: 200
max_accel: 2000
max_z_velocity: 15
max_z_accel: 45
square_corner_velocity: 6.0

#####################################################################
#      X/Y Stepper Settings
#####################################################################
[stepper_x]
step_pin: gpio11
## Refer to https://docs.vorondesign.com/build/startup/#v0
dir_pin: gpio10                                                     # Check motor direction in link above. If inverted, add a ! before gpio10
enable_pin: !gpio12
rotation_distance: 40
microsteps: 32
full_steps_per_rotation: 200                                        # Set to 400 for 0.9° degree stepper motor, 200 is for 1.8° stepper motors
endstop_pin: tmc2209_stepper_x:virtual_endstop
position_endstop: 120
position_max: 120
homing_speed: 25                                                   # for sensorless homing it is recommended not to go above 40mm/s   
homing_retract_dist: 0
#homing_positive_dir: true

[tmc2209 stepper_x]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 0
interpolate: False
# you need to calculate the run_current value using the equation (rated_motor_current * 0.707 = Maximum_run_current) start with a value that is about 60%-70% of your maximum value.
# rated_motor_current * 0.707 * 65% = 1.5A * .707 * .65 = 0.69
run_current: .69         
sense_resistor: 0.110
stealthchop_threshold: 0                                            # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle
diag_pin: ^gpio4    												# YOU NEED TO JUMP THIS DIAG PIN ON YOUR BOARD FOR SENSORLESS HOMING TO WORK 
driver_SGTHRS: 65									# this is set to 255 which is the MAX sensitivity for sensorless homing, you will need to tune this later

[stepper_y]
step_pin: gpio6
## Refer to https://docs.vorondesign.com/build/startup/#v0
dir_pin: gpio5                                                      # Check motor direction in link above. If inverted, add a ! before gpio5
enable_pin: !gpio7
rotation_distance: 40
microsteps: 32
full_steps_per_rotation: 200                                        # Set to 400 for 0.9° degree stepper motor, 200 is for 1.8° stepper motors
endstop_pin: tmc2209_stepper_y:virtual_endstop
position_endstop: 120
position_max: 120
homing_speed: 25                                                     # for sensorless homing it is recommended not to go above 40mm/s   
homing_retract_dist: 0
#homing_positive_dir: true

[tmc2209 stepper_y]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 2
interpolate: False
# you need to calculate the run_current value using the equation (rated_motor_current * 0.707 = Maximum_run_current) start with a value that is about 60%-70% of your maximum value.
# rated_motor_current * 0.707 * 65% = 1.5A * .707 * .65 = 0.69
run_current: .69
sense_resistor: 0.110
stealthchop_threshold: 0                                            # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle
diag_pin: ^gpio3    												# YOU NEED TO JUMP THIS DIAG PIN ON YOUR BOARD FOR SENSORLESS HOMING TO WORK 
driver_SGTHRS: 65									# this is set to 255 which is the MAX sensitivity for sensorless homing, you will need to tune this later

#####################################################################
#   Z Stepper Settings
#####################################################################
[stepper_z]
step_pin: gpio19
dir_pin: !gpio28                                                    # Remove the ! before gpio28 if motor direction is inverted.
enable_pin: !gpio2
rotation_distance: 8                                                # For T8x8 integrated lead screw
microsteps: 32
endstop_pin: ^gpio25
#position_endstop: 120
position_max: 120
position_min:-3.0
homing_speed: 10
second_homing_speed: 3.0
homing_retract_dist: 3.0

[tmc2209 stepper_z]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 1
interpolate: False
## Formbot Moons 
# rated_motor_current * 0.707 * .65 = 0.65 * 0.707 * 0.65 = 0.30
run_current: 0.30
sense_resistor: 0.110
stealthchop_threshold: 0                                            # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle

#####################################################################
#   Extruder
#####################################################################
[extruder]
step_pin: gpio14
dir_pin: !gpio13                                                     # Add ! if moving opposite direction
enable_pin: !gpio15
full_steps_per_rotation: 200                                       # Set to 200 for LDO 1.8° stepper motor, and set to 400 for OMC(StepperOnline) 0.9° stepper motor
rotation_distance: 22.23                                           # See calibrating rotation_distance on extruders doc
gear_ratio: 50:10
microsteps: 32
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: umb:gpio4                                               #Pico board pin gpio23 old
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for NTC 100k 3950 thermistors
sensor_type: ATC Semitec 104GT-2                                    # Revo Hotend
sensor_pin: umb:gpio29                                              # Old umbillical pin gpio27
pullup_resistor: 2200
#control: pid                                                        # Do PID calibration after initial checks
#pid_Kp: 28.182
#pid_Ki: 1.978
#pid_Kd: 100.397
min_temp: 0
max_temp: 300
min_extrude_temp: 170
max_extrude_only_distance: 150
max_extrude_cross_section: 0.8
pressure_advance: 0.0                                               # See tuning pressure advance doc
pressure_advance_smooth_time: 0.040

[tmc2209 extruder]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 3
interpolate: true
run_current: 0.85
hold_current: 0.100
sense_resistor: 0.11
stealthchop_threshold: 0                                            # Set to 0 for spreadcycle, avoid using stealthchop on extruder
driver_TBL: 0
driver_HEND: 6
driver_HSTRT: 7
driver_TOFF: 4

#####################################################################
#   Bed Heater
#####################################################################
[heater_bed]
heater_pin: gpio21
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
sensor_type: ATC Semitec 104NT-4-R025H42G 
sensor_pin: gpio26
smooth_time: 3.0
#max_power: 0.6                                                     # Only needed for 100w pads
min_temp: 0
max_temp: 120
#control: pid                                                        # Do PID calibration after initial checks
#pid_kp: 68.453
#pid_ki: 2.749
#pid_kd: 426.122

#####################################################################
# Fan Control
#####################################################################
[heater_fan hotend_fan]
pin: umb:gpio3                                                      #Old setting for umbillical board gpio20
max_power: 1.0
kick_start_time: 0.2
heater: extruder
heater_temp: 50.0
#fan_speed: 1.0                                                     # You can't PWM the delta fan unless using blue wire

[fan]
pin: umb:gpio2                                                      #Old setting for umbillical board gpio17
kick_start_Time: 0.5
off_below: 0.10

[heater_fan MCU_Cooling]
pin: gpio18
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0

##Nevermore - see nevermore.cfg

#####################################################################
# Neopixel - Disco Matsticks and Bed Light
#####################################################################
## Neopixel 1 - Frame PCB Right
[neopixel rgb1]
pin: umb:gpio1
chain_count: 10
color_order: GRB
initial_RED: 1.0
initial_GREEN: 1.0
initial_BLUE: 1.0

## Neopixel 2 - Frame PCB Left
[neopixel rgb2]
pin: umb:gpio7
chain_count: 10
color_order: GRB
initial_RED: 1.0
initial_GREEN: 1.0
initial_BLUE: 1.0

#####################################################################
# Buzzer Picobillical
#####################################################################
## Buzzer - Frame PCB
[output_pin beeper]
pin: umb:gpio5
value: 0
shutdown_value: 0

[gcode_macro M300]
description: Custom M300 code to allow beeper to be used in gcode
gcode:
    {% set TIME_MS = params.P|default(100)|float %}
    SET_PIN PIN=beeper VALUE=1
    G4 P{TIME_MS}
    SET_PIN PIN=beeper VALUE=0

#####################################################################
#  Sensors
#####################################################################
[thermistor CMFB103F3950FANT]
temperature1: 0.0
resistance1: 32116.0
temperature2: 40.0
resistance2: 5309.0
temperature3: 80.0
resistance3: 1228.0

## CT - Frame PCB
## Chamber thermistor
[temperature_sensor chamber]
sensor_type: CMFB103F3950FANT
sensor_pin: umb:gpio28
pullup_resistor: 2200
min_temp: 0
max_temp: 100
gcode_id: chamber_th

[temperature_sensor SKR_Pico]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 80

[temperature_sensor PI4B]
sensor_type: temperature_host
min_temp: 10
max_temp: 80

#####################################################################
# Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800

[homing_override]
axes: xyz
set_position_z: 0
gcode:
    {% set home_all = 'X' not in params and 'Y' not in params and 'Z' not in params %}
    SAVE_GCODE_STATE NAME=STATE_HOME_OVERRIDE

    # Home Z first, to avoid any situation where the nozzle might scrape the bed
    {% if home_all or 'Z' in params %}
        _HOME_Z
    {% endif %}

    {% if home_all or 'X' in params %}
        _HOME_X
    {% endif %}

    {% if home_all or 'Y' in params %}
        _HOME_Y
    {% endif %}
    
    # G90
    # G0 X60 Y60 Z20 F3600 # move to bed center
    RESTORE_GCODE_STATE NAME=STATE_HOME_OVERRIDE
    
#[safe_z_home]
##home_xy_position: 120,120 	# these coordinates must NOT be greater than the values specified in "position_max:" for the X and Y steppers
#speed: 50.0
#z_hop: 5

#####################################################################
# Bed Screws
#####################################################################
[bed_screws]
screw1: 60,5
screw1_name: front screw
screw2: 5,115
screw2_name: back left
screw3: 115,115
screw3_name: back right


#####################################################################
# Macros
#####################################################################

#####################################################################
#   A better print_start macro for v0
#####################################################################

## *** THINGS TO UNCOMMENT: ***
## Nevermore (if you have one)

[gcode_macro PRINT_START]
gcode:
  # Fetches data from your slicer. Such as bed temp, extruder temp, chamber temp and size of your printer.
  {% set target_bed = params.BED|int %}
  {% set target_extruder = params.EXTRUDER|int %}
  {% set target_chamber = params.CHAMBER|default("45")|int %}
  {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
  {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}

  # Homes the printer and sets absolute positioning
  G28                                                 # Full home (XYZ)
  G90                                                 # Absolute position

  # Checks if the bed temp is higher than 90c - if so then trigger a heatsoak
  {% if params.BED|int > 90 %}
    M106 S255                                         # Turn on the PT-fan

    ##  Uncomment if you have a Nevermore.
    SET_FAN_SPEED FAN=nevermore SPEED=1                   # Turn on the nevermore

    G1 X{x_wait} Y{y_wait} Z15 F9000                  # Go to center of the bed
    M190 S{target_bed}                                # Set target temp for the bed
    G4 P300000                                        # Wait 5 min for the bedtemp to stabilize
    TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={target_chamber}   # Wait for chamber temp

  # If the bed temp is not over 90c it skips the heatsoak and just heats up to set temp with a 1 min soak.
  {% else %}
    G1 X{x_wait} Y{y_wait} Z15 F9000                  # Go to center of the bed
    M190 S{target_bed}                                # Set target temp for the bed
  {% endif %}

  # Heats up the hotend up to target via slicer
  M107                                                # Turn off partcooling fan
  M109 S{target_extruder}                             # Heat hotend to print temp

  # Create a prime line and starts the print
  G1 X5 Y4 Z0.4 F10000                                # Go to starting point
  G1 X115 E20 F1000                                   # Primeline at rear

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-2.0 F3600                 ; retract filament
    
    TURN_OFF_HEATERS
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    SET_FAN_SPEED FAN=nevermore SPEED=0                  # Turn off the nevermore
    UPDATE_DELAYED_GCODE ID=filter_off DURATION=180
    
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END

[gcode_macro CANCEL_PRINT]
rename_existing: CANCEL_PRINT_BASE
gcode:
 # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}

    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-2.0 F3600                 ; retract filament
    
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE

    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    SET_FAN_SPEED FAN=nevermore SPEED=0                  # Turn off the nevermore
    UPDATE_DELAYED_GCODE ID=filter_off DURATION=180


[gcode_macro _HOME_X]
gcode:
    # Always use consistent run_current on A/B steppers during sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set HOME_CURRENT_RATIO = 0.7 %} # by default we are dropping the motor current during homing. you can adjust this value if you are having trouble with skipping while homing
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT_RATIO * RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT_RATIO * RUN_CURRENT_Y}

    # Home
    G28 X
    # Move away
    G91
    G1 X-10 F1200
    
    # Wait for StallGuard registers to clear
    M400
    G90
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}

[gcode_macro _HOME_Y]
gcode:
    # Set current for sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set HOME_CURRENT_RATIO = 0.7 %} # by default we are dropping the motor current during homing. you can adjust this value if you are having trouble with skipping while homing
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT_RATIO * RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT_RATIO * RUN_CURRENT_Y}

    # Home
    G28 Y
    # Move away
    G91
    G1 Y-10 F1200

    # Wait for StallGuard registers to clear
    M400
    G90
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}

[gcode_macro _HOME_Z]
gcode:
    G90
    G28 Z
    G1 Z30

[gcode_macro LOAD_FILAMENT]
variable_load_distance:  100
variable_purge_distance:  50
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 60 %}
    SAVE_GCODE_STATE NAME=load_state
    G91
    G92 E0
    G1 E{load_distance} F{max_velocity} # fast-load
    G1 E{purge_distance} F{speed} # purge
    RESTORE_GCODE_STATE NAME=load_state

[gcode_macro UNLOAD_FILAMENT]
variable_unload_distance:  50
variable_purge_distance:  25
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 60 %}
    SAVE_GCODE_STATE NAME=unload_state
    G91
    G92 E0
    G1 E{purge_distance} F{speed} # purge
    G1 E-{unload_distance} F{max_velocity} # fast-unload
    RESTORE_GCODE_STATE NAME=unload_state
    
[gcode_macro CENTER]
description: Moves the toolhead to the center
gcode:
  CHOME
  {% set x_center = printer.toolhead.axis_maximum.x|float / 2.0 %}
  {% set y_center = printer.toolhead.axis_maximum.y|float / 2.0 %}
  G90
  G1 X{x_center} Y{x_center} F7800

[gcode_macro FRONT]
description: Moves the toolhead to the front
gcode:
  CHOME
  {% set x_center = printer.toolhead.axis_maximum.x|float / 2.0 %}
  {% set y_center = printer.toolhead.axis_maximum.y|float / 2.0 %}
  G90
  G1 X{x_center} Y10 F7800

[gcode_macro NOZZLE_PURGE]
description: Draw a purge line at the front left edge of the build plate
gcode:
  CHOME
  G0 X2.5 Y4 F3000 ; Go to front
  G0 Z0.15 ; Drop to bed
  M83 ; Set extruder to relative mode
  G1 X45 E15 F500 ; Extrude 25mm of filament in a 4cm line
  G1 E-0.5 F400 ; Retract a little
  G1 X85 F4000 ; Quickly wipe away from the filament line
  G1 Z0.3 ; Raise and begin printing.

[gcode_macro LIGHT_ON]
variable_delay_ms: 50
variable_led_count: 8
gcode:
  {% for led_index in range(1, led_count + 1) %}
    SET_LED LED=rgb1 RED=0.8 GREEN=0.8 BLUE=0.99 INDEX={led_index}
    SET_LED LED=rgb2 RED=0.8 GREEN=0.8 BLUE=0.99 INDEX={led_index}
    G4 P{delay_ms}
  {% endfor %}
  
[gcode_macro LIGHT_OFF]
gcode:
  SET_LED LED=rgb1 RED=0 GREEN=0 BLUE=0
  SET_LED LED=rgb2 RED=0 GREEN=0 BLUE=0

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 29.709
#*# pid_ki = 3.047
#*# pid_kd = 72.413
#*#
#*# [stepper_z]
#*# position_endstop = 115.360
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 68.117
#*# pid_ki = 0.919
#*# pid_kd = 1261.864
